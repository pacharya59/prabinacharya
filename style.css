// Mobile nav toggle
const hamburger = document.getElementById('hamburger');
const mainNav = document.getElementById('mainNav');
hamburger.addEventListener('click', () => mainNav.classList.toggle('open'));

// Scroll reveal
const faders = document.querySelectorAll('.fade');
const options = { threshold: 0.12 };
const io = new IntersectionObserver((entries) => {
  entries.forEach(e => { if(e.isIntersecting) e.target.classList.add('visible'); });
}, options);
faders.forEach(f => io.observe(f));

// Canvas Data Drops
const canvas = document.getElementById('dataCanvas');
const ctx = canvas.getContext('2d');
let w = canvas.width = window.innerWidth;
let h = canvas.height = window.innerHeight;

// Cloud position
const cloud = { x: w/2, y: 80, radius: 60 };

// Drops
const drops = [];
const dropCount = 120;
for(let i=0;i<dropCount;i++){
  drops.push({
    x: cloud.x + (Math.random()-0.5)*cloud.radius*2,
    y: cloud.y + 20 + Math.random()*10,
    size: Math.random()*4+2,
    speed: Math.random()*2+2,
    alpha: Math.random()*0.5+0.3,
    ripple: 0
  });
}

function drawCloud(){
  ctx.beginPath();
  ctx.arc(cloud.x, cloud.y, cloud.radius, Math.PI*0.5, Math.PI*1.5);
  ctx.arc(cloud.x+40, cloud.y-20, cloud.radius*0.8, Math.PI*1, Math.PI*2);
  ctx.arc(cloud.x+80, cloud.y, cloud.radius*0.6, Math.PI*1.5, Math.PI*0.5);
  ctx.closePath();
  ctx.fillStyle='rgba(255,255,255,0.15)';
  ctx.fill();
}

function animate(){
  ctx.clearRect(0,0,w,h);
  drawCloud();

  drops.forEach(d=>{
    ctx.beginPath();
    ctx.arc(d.x,d.y,d.size,0,Math.PI*2);
    ctx.fillStyle=`rgba(0,200,255,${d.alpha})`;
    ctx.fill();

    if(d.ripple>0){
      ctx.beginPath();
      ctx.arc(d.x,h-5,d.ripple,0,Math.PI*2);
      ctx.strokeStyle=`rgba(0,200,255,${0.3*(1-d.ripple/15)})`;
      ctx.stroke();
      d.ripple += 0.5;
      if(d.ripple>15){ d.ripple=0; d.y = cloud.y+20; d.x = cloud.x + (Math.random()-0.5)*cloud.radius*2; }
    }

    d.y += d.speed;
    if(d.y>h-5){ d.ripple=1; d.y=h-5; }
  });

  requestAnimationFrame(animate);
}

animate();

window.addEventListener('resize', ()=>{
  w=canvas.width=window.innerWidth;
  h=canvas.height=window.innerHeight;
});
